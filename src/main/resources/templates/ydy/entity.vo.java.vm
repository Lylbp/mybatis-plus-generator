package ${cfg.VOPackage};

#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
import io.swagger.annotations.*;
#end

/**
 * <p>
 * $!{table.comment}VO类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
#if(${chainModel})
@Accessors(chain = true)
#end
#end
#if(${swagger2})
@ApiModel(value="${entity}VO对象")
#end
public class ${entity}VO {
    ## ----------  BEGIN 字段循环遍历  ----------
    #foreach($field in ${table.fields})

        #if(${field.keyFlag})
            #set($keyPropertyName=${field.propertyName})
        #end
        #if("$!field.comment" != "")
            #if(${swagger2})
            @ApiModelProperty(value = "${field.comment}")
            #else
            /**
             * ${field.comment}
             */
            #end
        #end
    #if(!${field.keyFlag})
        private ${field.propertyType} ${field.propertyName};
    #end
    #end
    ## ----------  END 字段循环遍历  ----------

    #if(!${entityLombokModel})
        #foreach($field in ${table.fields})
            #if(${field.propertyType.equals("boolean")})
                #set($getprefix="is")
            #else
                #set($getprefix="get")
            #end

            public ${field.propertyType} ${getprefix}${field.capitalName}() {
            return ${field.propertyName};
        }

            #if(${chainModel})
            public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #else
                public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #end
            this.${field.propertyName} = ${field.propertyName};
            #if(${chainModel})
                return this;
            #end
        }
        #end
        ## --foreach end---
    #end
    ## --end of #if(!${entityLombokModel})--

    #if(!${entityLombokModel})
        @Override
        public String toString() {
        return "${entity}{" +
            #foreach($field in ${table.fields})
                #if(!${field.keyFlag})
                        "${field.propertyName}=" + ${field.propertyName} + #if($foreach.hasNext)"," +#end
                #end
            #end
                "}";
    }
    #end
}