package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${cfg.VOPackage}.${entity}VO;
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Map;
import cn.hutool.core.util.ObjectUtil;
import cn.hutool.core.util.StrUtil;
import java.util.HashMap;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import ${cfg.BasePack}.common.enums.TrueOrFalseEnum;
/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {
        @Override
        public Boolean edit(${entity} entity) {
            //TODO 新增或编辑之前需要进行的逻辑
            return saveOrUpdate(entity);
        }

        @Override
        public List<${entity}VO> get${entity}VOListByParams(Page<${entity}VO> page, Map<String, Object> params) {
            return getBaseMapper().query${entity}VOByParams(page, params);
        }

        @Override
        public ${entity}VO getOne${entity}VOByParams(Map<String, Object> params) {
            ${entity}VO entityVO = null;
            List<${entity}VO> list = get${entity}VOListByParams(null,params);
            if (ObjectUtil.isNotEmpty(list)){
                entityVO = list.get(0);
            }

            return entityVO;
        }

        @Override
        public ${entity}VO getOne${entity}VOBy(String columnName, Object columnValue){
            HashMap<String, Object> params = new HashMap<>(1);
            params.put(columnName, columnValue);

            return getOne${entity}VOByParams(params);
        }

        @Override
        public Boolean isExist(String id) {
            return ObjectUtil.isNotEmpty(this.getById(id));
        }
}
#end
