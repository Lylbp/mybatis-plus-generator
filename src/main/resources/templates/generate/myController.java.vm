package ${package.Controller};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end


import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import ${cfg.VOPackage}.${entity}VO;
import ${cfg.QOPackage}.${entity}QO;
import ${cfg.DTOPackage}.${entity}DTO;
import org.springframework.web.bind.annotation.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.annotation.Resource;
import cn.hutool.core.bean.BeanUtil;
import java.util.List;
import java.util.Map;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${cfg.BasePack}.app.common.msg.R;
import ${cfg.BasePack}.app.common.vo.PageVO;


/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@Api(tags = "$!{table.comment}")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    @Resource
    private ${table.serviceName}  service;

    /**
    * 获取数据分页列表
    *
    * @author ${author}
    * @date   ${date}
    * @return R<Boolean>
    */
    @PostMapping(value = "/list")
    @ApiOperation("获取数据分页列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "current", value = "当前页 默认1", defaultValue = "1", dataType = "Integer", paramType = "query"),
            @ApiImplicitParam(name = "size", value = "每页显示数 默认10", defaultValue = "10", dataType = "Integer", paramType = "query")
    })
    public R<PageVO<${entity}VO>> getList(@RequestBody ${entity}QO qo, @RequestParam(defaultValue = "1") Integer current,@RequestParam(defaultValue = "10") Integer size) {
        Map<String, Object> params = BeanUtil.beanToMap(qo);

        Page<${entity}VO> page = new Page<>(current, size);
        List<${entity}VO> list = service.get${entity}VOListByParams(page, params);
        page.setRecords(list);

        return R.ok(page);
    }

    /**
    * 获取信息
    *
    * @author ${author}
    * @date   ${date}
    * @return R<${entity}VO>
    */
    @GetMapping(value = "/{id}")
    @ApiOperation("获取信息")
    public R<${entity}VO> getInfoById(@PathVariable(value = "id") @NotBlank String id) {
        ${entity}VO entity = service.getOne${entity}VOBy("id", id);

        return R.ok(entity);
    }

    /**
    * 添加
    *
    * @author ${author}
    * @date   ${date}
    * @return R<Boolean>
    */
    @PostMapping(value = "/add")
    @ApiOperation("添加")
    public R<Boolean> add(@RequestBody @Validated ${entity}DTO dto) {
        ${entity} entity = new ${entity}();
        BeanUtil.copyProperties(dto, entity);

        return R.ok(service.edit(entity));
    }

    /**
    * 编辑
    *
    * @author ${author}
    * @date   ${date}
    * @return R<Boolean>
    */
    @PutMapping(value = "/edit")
    @ApiOperation("编辑")
    public R<Boolean> edit(@RequestBody @Validated ${entity}DTO dto) {
        ${entity} entity = new ${entity}();
        BeanUtil.copyProperties(dto, entity);
        return R.ok(service.edit(entity));
    }


    /**
    * 批量删除
    *
    * @author ${author}
    * @date   ${date}
    * @return R<Boolean>
    */
    @DeleteMapping(value = "/batchDelete")
    @ApiOperation("批量删除")
    public R<Boolean> batchDelete(@RequestBody @NotNull List<String> idList) {
        return R.ok(service.removeByIds(idList));
    }
}

#end